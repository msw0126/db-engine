# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-03-20 16:47
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AtomAct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('atom_learn_id', models.CharField(max_length=100)),
                ('input_comp_id', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AtomLearn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('input_comp_id', models.CharField(max_length=100)),
                ('feature_id', models.CharField(max_length=100)),
                ('feature_target', models.CharField(max_length=100)),
                ('algorithm', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='AtomLearnParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('param_name', models.CharField(max_length=30)),
                ('param_value', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='AtomTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('atom_act_id', models.CharField(max_length=100)),
                ('input_comp_id', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CompIDGenerator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('container_id', models.CharField(max_length=100)),
                ('table_name', models.CharField(max_length=50)),
                ('key_fields', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='CurrentExecution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('current_execution', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Execution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=20)),
                ('project_id', models.CharField(max_length=10)),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('status', models.CharField(max_length=20)),
                ('task_count', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ExportModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('atom_learn_id', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureCombine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('robotx_spark_id', models.CharField(max_length=100)),
                ('self_defined_feature_id', models.CharField(max_length=100)),
                ('robotx_table_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureCombineRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('robotx_field', models.CharField(max_length=100)),
                ('self_defined_field', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='HiveReader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('table_name', models.CharField(max_length=100)),
                ('logic_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='IOFieldType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('field', models.CharField(max_length=100)),
                ('field_type', models.CharField(max_length=10)),
                ('database_type', models.CharField(max_length=50)),
                ('date_format', models.CharField(max_length=20, null=True)),
                ('date_size', models.CharField(max_length=20, null=True)),
                ('ignore', models.BooleanField()),
                ('selected', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModelBestParams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ModelCoefficient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('coefficient', models.CharField(max_length=100)),
                ('standardized_coefficient', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ModelConfusionMatrix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('threshold', models.CharField(max_length=100)),
                ('value_type', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ModelDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('algorithm', models.CharField(max_length=50)),
                ('target', models.CharField(max_length=200)),
                ('tuning_metric', models.CharField(default='AUC', max_length=20)),
                ('n_folds', models.IntegerField(null=True)),
                ('train_percent', models.IntegerField(null=True)),
                ('validation_percent', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModelGainLiftSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('group', models.IntegerField()),
                ('cumulative_data_fraction', models.CharField(max_length=100)),
                ('node1lower_threshold', models.CharField(max_length=100)),
                ('node1lift', models.CharField(max_length=100)),
                ('node1cumulative_lift', models.CharField(max_length=100)),
                ('node1response_rate', models.CharField(max_length=100)),
                ('node1cumulative_response_rate', models.CharField(max_length=100)),
                ('node1capture_rate', models.CharField(max_length=100)),
                ('node1cumulative_capture_ratenode1', models.CharField(max_length=100)),
                ('node1gain', models.CharField(max_length=100)),
                ('node1cumulative_gain', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ModelKFoldsSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('metric', models.CharField(max_length=100)),
                ('value_type', models.CharField(max_length=20)),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ModelMaxCriteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('metric', models.CharField(max_length=100)),
                ('threshold', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
                ('idx', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ModelPredictionBIns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('bin', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ModelScoreGroupThreshold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('threshold', models.CharField(max_length=100)),
                ('score_bins', models.CharField(max_length=100)),
                ('tps', models.CharField(max_length=100)),
                ('fps', models.CharField(max_length=100)),
                ('tns', models.CharField(max_length=100)),
                ('fns', models.CharField(max_length=100)),
                ('recall', models.CharField(max_length=100)),
                ('precision', models.CharField(max_length=100)),
                ('accuracy', models.CharField(max_length=100)),
                ('specificity', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ModelSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('layer', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ModelSyntheticMetrics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ModelThresholdsMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('threshold', models.CharField(max_length=100)),
                ('metric', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ModelTopnMetricList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('score_topN', models.CharField(max_length=100)),
                ('tps', models.CharField(max_length=100)),
                ('fps', models.CharField(max_length=100)),
                ('tns', models.CharField(max_length=100)),
                ('fns', models.CharField(max_length=100)),
                ('recall', models.CharField(max_length=100)),
                ('precision', models.CharField(max_length=100)),
                ('accuracy', models.CharField(max_length=100)),
                ('specificity', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ModelVariableImportance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('variable', models.CharField(max_length=100)),
                ('relative_importance', models.CharField(max_length=100)),
                ('scaled_importance', models.CharField(max_length=100)),
                ('percentage', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='MyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=100)),
                ('field_num', models.IntegerField(null=True)),
                ('file_size', models.CharField(max_length=50, null=True)),
                ('creat_time', models.CharField(max_length=50, null=True)),
                ('creat_user', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MyDataCsvInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=100)),
                ('csv_file_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='MyDataType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=100)),
                ('field', models.CharField(max_length=100)),
                ('field_type', models.CharField(max_length=10)),
                ('ori_type', models.CharField(max_length=10)),
                ('date_format', models.CharField(max_length=10, null=True)),
                ('date_size', models.CharField(max_length=10, null=True)),
                ('sample_data', models.CharField(max_length=1000)),
                ('selected', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('source', models.CharField(max_length=20)),
                ('source_table_name', models.CharField(max_length=50)),
                ('target', models.CharField(max_length=20)),
                ('target_table_name', models.CharField(max_length=50)),
                ('rel_type', models.CharField(max_length=8)),
                ('sc_join', models.CharField(max_length=200)),
                ('tg_join', models.CharField(max_length=200)),
                ('interval', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SelfDefinedFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('file_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SelfDefinedFeatureType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('field', models.CharField(max_length=100)),
                ('field_type', models.CharField(max_length=10)),
                ('ori_type', models.CharField(max_length=10)),
                ('date_format', models.CharField(max_length=10, null=True)),
                ('date_size', models.CharField(max_length=10, null=True)),
                ('sample_data', models.CharField(max_length=1000)),
                ('selected', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('task_id', models.CharField(max_length=20)),
                ('component_id', models.CharField(max_length=100)),
                ('component_type', models.CharField(max_length=20)),
                ('error_code', models.CharField(max_length=30, null=True)),
                ('application_id', models.CharField(max_length=50, null=True)),
                ('tracking_url', models.CharField(max_length=200, null=True)),
                ('detail', models.CharField(max_length=10000, null=True)),
                ('has_log', models.BooleanField(default=False)),
                ('task_status', models.CharField(max_length=20)),
                ('relies', models.IntegerField()),
                ('submit_time', models.DateTimeField(null=True)),
                ('record_time', models.DateTimeField(null=True)),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('celery_id', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaskIDGenerator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('task_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TaskRelies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('sc_comp_id', models.CharField(max_length=100)),
                ('tg_comp_id', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='YarnResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(max_length=10)),
                ('component_id', models.CharField(max_length=100)),
                ('driver_memory', models.IntegerField()),
                ('num_executors', models.IntegerField()),
                ('executor_memory', models.IntegerField()),
                ('executor_cores', models.IntegerField()),
                ('driver_perm', models.IntegerField()),
                ('executor_perm', models.IntegerField()),
            ],
        ),
    ]
